{"version":3,"sources":["MovieView.module.css","App.module.css","SearchView.module.css","icons/favourite.svg","icons/watchlist.svg","ListView.module.css","icons/search.svg","MovieView.js","http-date-to-timestamp.js","async-utils.js","request-rate-limiter.js","tmdb.js","SearchView.js","NotFoundView.js","ListView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","movieDetails","posterAndInfoContainer","tagline","poster","trailer","genres","overview","buttonRow","app","main","header","logo","headerMenu","activeLink","searchInput","filmList","fadeIn","loadingText","fadeInLoadingText","__webpack_require__","p","listTitle","movieList","MovieView","props","id","title","backdrop","youtubeTrailer","useEffect","loadMovieDetails","movieId","Number","isSafeInteger","backgroundImage","react_default","a","createElement","className","styles","style","src","alt","onClick","inWatchlist","removeFromList","addToList","data-inlist","watchlistIcon","inFavourites","favouriteIcon","map","genre","index","key","encodeURIComponent","allow","allowFullScreen","months","httpDateToTimestamp","input","result","NaN","parts","exec","_parts","Object","slicedToArray","dom","monthName","year","hour","minute","second","leapSeconds","monthIndex","indexOf","ecmaDateString","padStart","String","Math","trunc","Date","parse","wait","_x","_wait","apply","this","arguments","_callee4","seconds","signal","_args4","regenerator_default","wrap","_context4","prev","next","length","undefined","throwIfAborted","abrupt","Promise","resolve","reject","onAbort","clearTimeout","timeout","removeEventListener","DOMException","addEventListener","setTimeout","stop","waitForSignal","_waitForSignal","_callee5","_len","signals","_key","_args5","_context5","Array","combineAbortSignals","cs","listener","waitForPromiseOrSignal","_x2","_waitForPromiseOrSignal","_callee6","promise","_len2","_key2","ac","aborted","signalPromise","_args6","_context6","AbortController","concat","finally","race","sent","catch","e","name","abort","finish","AsyncMutex","classCallCheck","createClass","value","_runExclusively","asyncToGenerator","mark","_callee2","asyncCallback","waitForCallbackWhenAborted","_len3","_key3","_this","_args2","_context2","t0","_callee","_context","_x3","locked","_len4","_key4","some","s","AbortSignalCombiner","listenerFunction","onAbortSignal","bind","_len5","inputSignals","_key5","filter","alreadyAborted","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","controller","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","destroy","get","_x4","_combineAbortSignals","_callee7","_len6","_key6","signalCombiner","_args7","_context7","construct","RequestRateLimiter","requestLimit","remaining","timeBetweenResets","nextReset","performance","now","lastResponseServerTime","Infinity","response","_RequestRateLimiter$i","interpretResponse","error","nextResetIn","serverTime","gotLimit","console","warn","isNaN","desired","min","max","limit","timeToWait","headers","responseTime","UTC","status","retryAfterFV","test","rLimit","parseInt","rem","MAX_SAFE_INTEGER","resetTime","TmdbClient","apiKey","signalForAllWork","language","limiter","configuration","configurationMutex","_getMovieDetails","imageSizes","reply","youtubeTrailerObject","imageBaseUrls","_this2","_args","queryServer","append_to_response","videos","results","Error","find","v","site","type","getImageBasePaths","g","sort","b","localeCompare","runtime","poster_path","posters","backdrop_path","backdrops","searchString","options","wrapAsyncGenerator","_callee3","_ret","_context3","delegateYield","_options$signal","_options$firstPage","firstPage","_options$posterWidth","posterWidth","posterBasePath","movieIds","page","morePages","awaitAsyncGenerator","Set","sendSearchMoviesRequest","total_pages","r","buildSearchResultObject","_ref","duplicate","has","add","_sendSearchMoviesRequest","query","_getConfiguration","_this3","runExclusively","_ref3","images","isStringArray","poster_sizes","backdrop_sizes","profile_sizes","imagesBaseUrl","secure_base_url","profiles","_queryServer","_callee8","address","params","_this4","_args8","_context8","_ref4","combinedSignal","url","buildUrl","api_key","waitToSendOne","fetch","Request","href","responseReceived","ok","json","t1","t2","_x6","_x5","_getImageBasePaths","_callee9","desiredSizes","_ref5","_i","_arr","bestSize","bestSizeAsInt","size","asInt","_args9","_context9","getConfiguration","substr","_x7","MovieSearcher","tmdb","onResultsReceived","m","abortController","loading","generator","firstResults","_this5","delayBeforeSending","searchMovies","then","loadMore","_this6","reachedEnd","resultsPromise","_ref6","load","arr","every","baseAddress","extraParams","URL","URLSearchParams","_ref11","_ref8","searchParams","set","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref12","_ref10","SearchView","possibleConstructorReturn","getPrototypeOf","call","state","searchResults","moreSearchResultsAvailable","searcher","tmdbClient","receivedSearchResults","assertThisInitialized","movie","devicePixelRatio","loadMoreResults","searchInputOnChange","newSearch","event","target","setState","searchStringChanged","lastResults","oldState","toConsumableArray","onChange","maxLength","autoFocus","placeholder","react_infinite_scroll_component_lib_default","dataLength","hasMore","scrollThreshold","loader","react_router_dom","to","process","lib_default","line","element","text","maxCalculateTimes","React","Component","NotFoundView","ListView","items","listsStorageKey","tmdbApiKey","Header","HeaderMenu","views","linkAddress","linkIcon","linkText","paths","isActive","match","_ref9","pathname","matchPath","path","exact","strict","activeClassName","App","tmdbClientAbortController","lists","JSON","localStorage","getItem","favourites","watchlist","searchIcon","render","SearchView_SearchView","ss","history","replace","_ref2","listName","addMovieToList","removeMovieFromList","onStorage","window","storageArea","newValue","loadMovieDetailsAbortController","getMovieDetails","callback","newListsObject","esm_extends","setItem","stringify","modifyList","list","findIndex","splice","react_router","_ref7","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa8f0638.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetails\":\"MovieView_movieDetails__K2Mmx\",\"posterAndInfoContainer\":\"MovieView_posterAndInfoContainer__dZIjz\",\"tagline\":\"MovieView_tagline__342k-\",\"poster\":\"MovieView_poster__JI5yO\",\"trailer\":\"MovieView_trailer__vx4Zn\",\"genres\":\"MovieView_genres__3Q71W\",\"overview\":\"MovieView_overview__2UNnq\",\"buttonRow\":\"MovieView_buttonRow__1XbxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3TUDt\",\"main\":\"App_main__xVsub\",\"header\":\"App_header__1jZGZ\",\"logo\":\"App_logo__3Fe0O\",\"headerMenu\":\"App_headerMenu__24eLE\",\"activeLink\":\"App_activeLink__3vyJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchView_searchInput__aPLgs\",\"filmList\":\"SearchView_filmList__3hpDA\",\"fadeIn\":\"SearchView_fadeIn__1IppW\",\"poster\":\"SearchView_poster__f-Yag\",\"loadingText\":\"SearchView_loadingText__3X2CB\",\"fadeInLoadingText\":\"SearchView_fadeInLoadingText__1_rEl\"};","module.exports = __webpack_public_path__ + \"static/media/favourite.b31d5567.svg\";","module.exports = __webpack_public_path__ + \"static/media/watchlist.d713f9a2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listTitle\":\"ListView_listTitle__2s7-C\",\"movieList\":\"ListView_movieList__1y2gx\"};","module.exports = __webpack_public_path__ + \"static/media/search.74737a6f.svg\";","import React, { useEffect } from \"react\";\nimport styles from \"./MovieView.module.css\";\nimport favouriteIcon from \"./icons/favourite.svg\";\nimport watchlistIcon from \"./icons/watchlist.svg\";\n\nexport default function MovieView(props) {\n\tconst movieDetails = props.movieDetails || {\n\t\tid: null,\n\t\ttitle: null,\n\t\ttagline: null,\n\t\tposter: null,\n\t\tbackdrop: null,\n\t\toverview: null,\n\t\tgenres: [],\n\t\tyoutubeTrailer: null,\n\t};\n\n\tuseEffect(() => {\n\t\tconst loadMovieDetails = props.loadMovieDetails;\n\t\tif(movieDetails.id !== props.movieId && Number.isSafeInteger(props.movieId)) {\n\t\t\tloadMovieDetails(props.movieId);\n\t\t}\n\t}, [movieDetails.id, props.loadMovieDetails, props.movieId]);\n\n\n\tconst onWatchlistButtonClick = () => {\n\t\tif(props.inWatchlist) {\n\t\t\tprops.removeFromList(\"watchlist\");\n\t\t} else {\n\t\t\tprops.addToList(\"watchlist\");\n\t\t}\n\t};\n\tconst onFavouritesButtonClick = () => {\n\t\tif(props.inFavourites) {\n\t\t\tprops.removeFromList(\"favourites\");\n\t\t} else {\n\t\t\tprops.addToList(\"favourites\");\n\t\t}\n\t};\n\n\tconst backgroundImage = (\n\t\tmovieDetails.backdrop ?\n\t\t\"url(\" + movieDetails.backdrop + \"), radial-gradient(rgba(0%,0%,0%,0.8), rgba(0%,0%,0%,1))\" :\n\t\t\"none\"\n\t);\n\t\n\treturn (\n\t\t<section className={styles.movieDetails} style={{ backgroundImage }}>\n\t\t\t<div className={styles.posterAndInfoContainer}>\n\t\t\t\t<img\n\t\t\t\t\tclassName={styles.poster}\n\t\t\t\t\tsrc={movieDetails.poster}\n\t\t\t\t\talt=\"Poster\"\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className={styles.buttonRow}>\n\t\t\t\t\t\t<button onClick={onWatchlistButtonClick} data-inlist={props.inWatchlist}>\n\t\t\t\t\t\t\t<img src={watchlistIcon} alt={props.inWatchlist ? \"Remove from watchlist\" : \"Add to watchlist\"} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={onFavouritesButtonClick} data-inlist={props.inFavourites}>\n\t\t\t\t\t\t\t<img src={favouriteIcon} alt={props.inFavourites ? \"Remove from favourites\" : \"Add to favourites\"} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2>{movieDetails.title}</h2>\n\t\t\t\t\n\t\t\t\t\t<p className={styles.tagline}>{movieDetails.tagline}</p>\n\t\t\t\t\n\t\t\t\t\t<ul className={styles.genres}>\n\t\t\t\t\t\t{movieDetails.genres.map((genre, index) =>\n\t\t\t\t\t\t\t<li key={index}>{genre}</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t\t<p className={styles.overview}>{movieDetails.overview}</p>\n\t\t\t\t\n\t\t\t\t\t{movieDetails.youtubeTrailer &&\n\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\"https://www.youtube.com/embed/\" +\n\t\t\t\t\t\t\t\tencodeURIComponent(movieDetails.youtubeTrailer)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tallow=\"autoplay; encrypted-media\"\n\t\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\t\ttitle=\"Trailer\"\n\t\t\t\t\t\t\tclassName={styles.trailer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\n","// Parses https://tools.ietf.org/html/rfc7231#section-7.1.1.1 (5.2.14) dates\n\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n/**\n * Example input: \"Sun, 12 May 2019 10:20:39 GMT\"\n * @param {*} input\n * @returns {number} Seconds since 1970-01-01 00:00:00 UTC or NaN\n */\nexport default function httpDateToTimestamp(input) {\n\tlet result = NaN;\n\tif(typeof input === \"string\") {\n\t\tconst parts = /^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) ([A-Za-z]{3}) (\\d{4,}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/.exec(input);\n\t\tif(parts !== null) {\n\t\t\tlet [, dom, monthName, year, hour, minute, second] = parts;\n\n\t\t\tlet leapSeconds = 0;\n\t\t\tif(+second > 59) { // ECMAScript's Date doesn't support leap seconds, sadly\n\t\t\t\tleapSeconds = 59 - second;\n\t\t\t\tsecond = \"59\";\n\t\t\t}\n\t\t\t\n\t\t\tconst monthIndex = months.indexOf(monthName);\n\t\t\tif(monthIndex >= 0) {\n\t\t\t\t// See https://www.ecma-international.org/ecma-262/6.0/#sec-date-time-string-format\n\t\t\t\tlet ecmaDateString = \"\";\n\t\t\t\tecmaDateString += \"+\" + year.padStart(6, \"0\");\n\t\t\t\tecmaDateString += \"-\" + String(monthIndex + 1).padStart(2, \"0\");\n\t\t\t\tecmaDateString += \"-\" + dom.padStart(2, \"0\");\n\t\t\t\tecmaDateString += \"T\" + hour.padStart(2, \"0\");\n\t\t\t\tecmaDateString += \":\" + minute.padStart(2, \"0\");\n\t\t\t\tecmaDateString += \":\" + second.padStart(2, \"0\");\n\t\t\t\tecmaDateString += \"Z\";\n\t\t\t\t\n\t\t\t\tresult = Math.trunc(Date.parse(ecmaDateString) / 1000) + leapSeconds;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n","/**\n * @param {!number} seconds\n * @param {?AbortSignal} [signal]\n */\nexport async function wait(seconds, signal = null) {\n\tif(seconds > 0) {\n\t\tthrowIfAborted(signal);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst onAbort = () => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tsignal.removeEventListener(\"abort\", onAbort);\n\t\t\t\treject(new DOMException(\"Aborted\", \"AbortError\"));\n\t\t\t};\n\n\t\t\tif(signal) {\n\t\t\t\tsignal.addEventListener(\"abort\", onAbort);\n\t\t\t}\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\tif(signal) {\n\t\t\t\t\tsignal.removeEventListener(\"abort\", onAbort);\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t}, seconds * 1000);\n\t\t});\n\t}\n};\n\n/**\n * Rejects when an abort signal is triggered. Never resolves.\n * This adds listeners to the signals until one of them is triggered,\n * keep this in mind so you avoid memory leaks\n * @param {...?AbortSignal} [signals]\n */\nexport async function waitForSignal(...signals) {\n\tif(signals.length > 1) {\n\t\treturn combineAbortSignals(cs => \n\t\t\twaitForSignal(cs)\n\t\t);\n\t} else if(signals.length === 1){\n\t\tthrowIfAborted(signals[0]);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst listener = () => {\n\t\t\t\tsignals[0].removeEventListener(\"abort\", listener);\n\t\t\t\treject(new DOMException(\"Aborted\", \"AbortError\"));\n\t\t\t};\n\t\t\tsignals[0].addEventListener(\"abort\", listener);\n\t\t});\n\t}\n};\n\n\n/**\n * Rejects when an abort signal is triggered or resolves/rejects\n * when the Promise does. Whichever comes first\n * @param {...?Promise} promise\n * @param {...?AbortSignal} [signals]\n */\nexport async function waitForPromiseOrSignal(promise, ...signals) {\n\tif(!signals.length) {\n\t\t// Optimised no-op path\n\t\treturn promise;\n\t}\n\n\tconst ac = new AbortController();\n\n\tlet aborted = false;\n\tconst signalPromise = waitForSignal(ac.signal, ...signals).finally(() => {\n\t\taborted = true;\n\t});\n\t\n\ttry {\n\t\treturn await Promise.race([promise, signalPromise]);\n\t} finally {\n\t\t// To suppress unnecessary error messages in the logs we need to catch\n\t\t// AbortErrors from the Promise that hasn't finished yet\n\t\tif(aborted) {\n\t\t\tpromise.catch((e) => {\n\t\t\t\tif(!(e instanceof DOMException) || e.name !== \"AbortError\") {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tsignalPromise.catch(e => {});\n\t\t}\n\t\tac.abort(); // Necessary for triggering waitForSignal's event listener cleanup\n\t\t\n\t}\n};\n\n\n/**\n * Used to prevent asynchronous functions from running simultaneously,\n * and to instead have them run one at a time\n */\nexport class AsyncMutex {\n\tconstructor() {\n\t\tthis.promise = null;\n\t}\n\n\t/**\n\t * \n\t * @param {!function} asyncCallback\n\t * @param {!boolean} [waitForCallbackWhenAborted] Whether or not to wait for asyncCallback to finish even when aborting\n\t * @param {...?AbortSignal} [signals]\n\t */\n\tasync runExclusively(asyncCallback, waitForCallbackWhenAborted = false, ...signals) {\n\t\twhile(this.promise !== null) {\n\t\t\ttry {\n\t\t\t\tawait waitForPromiseOrSignal(this.promise, ...signals);\n\t\t\t} catch(e) { }\n\t\t\tthrowIfAborted(signals);\n\t\t}\n\t\tthis.promise = (async () => {\n\t\t\tawait 0;\n\t\t\ttry {\n\t\t\t\treturn await asyncCallback();\n\t\t\t} finally {\n\t\t\t\tthis.promise = null;\n\t\t\t}\n\t\t})();\n\t\treturn (\n\t\t\twaitForCallbackWhenAborted ?\n\t\t\tthis.promise :\n\t\t\twaitForPromiseOrSignal(this.promise, ...signals)\n\t\t);\n\t}\n\tlocked() {\n\t\treturn this.locked;\n\t}\n};\n\n\nexport class CompleteOnce {\n\tconstructor(func, ...signals) {\n\t\tthis.func = func;\n\t\tthis.mutex = new AsyncMutex();\n\t}\n\tasync run() {\n\t\t\n\t}\n};\n\n\n/**\n * \n * @param {...?AbortSignal} signals\n */\nexport function throwIfAborted(...signals) {\n\tif(signals.some(s => s && s.aborted)) {\n\t\tnew DOMException(\"Aborted\", \"AbortError\");\n\t}\n};\n\n\n/**\n * Use to combine several AbortSignals into one.\n * Remember to call destroy() when you're done to avoid memory leaks\n */\nexport class AbortSignalCombiner {\n\t/**\n\t * \n\t * @param {...?AbortSignal} inputSignals\n\t */\n\tconstructor(...inputSignals) {\n\t\tthis.listenerFunction = this.onAbortSignal.bind(this);\n\n\t\tthis.inputSignals = inputSignals.filter(s => !!s);\n\n\t\tlet alreadyAborted = false;\n\t\tfor(let signal of this.inputSignals) {\n\t\t\tsignal.addEventListener(\"abort\", this.listenerFunction);\n\t\t\talreadyAborted = alreadyAborted || signal.aborted;\n\t\t}\n\n\t\tthis.controller = new AbortController();\n\n\t\tif(alreadyAborted) {\n\t\t\tthis.controller.abort();\n\t\t}\n\t}\n\n\tget signal() {\n\t\treturn this.controller.signal;\n\t}\n\n\t/**\n\t * Be sure to call this function when you're done, to avoid memory leaks\n\t * @returns {void}\n\t */\n\tdestroy() {\n\t\tfor(let signal of this.inputSignals) {\n\t\t\tsignal.removeEventListener(\"abort\", this.listenerFunction);\n\t\t}\n\t\tthis.inputSignals = [];\n\t}\n\n\t/**\n\t * @private\n\t */\n\tonAbortSignal() {\n\t\tthis.destroy();\n\t\tthis.controller.abort();\n\t}\n};\n\n/**\n * Gives you an AbortSignal that's triggered when any of the given AbortSignals is.\n * The resulting AbortSignal is only useful for the lifetime of the async function call\n * \n * @param {function(AbortSignal):Promise} asyncCallback\n * @param {...?AbortSignal} inputSignals\n * @return {*}\n */\nexport async function combineAbortSignals(asyncCallback, ...inputSignals) {\n\tconst signalCombiner = new AbortSignalCombiner(...inputSignals);\n\ttry {\n\t\treturn await asyncCallback(signalCombiner.signal);\n\t} finally {\n\t\tsignalCombiner.destroy();\n\t}\n};\n\n","\nimport httpDateToTimestamp from \"./http-date-to-timestamp.js\";\nimport { wait } from \"./async-utils.js\";\n\n/**\n * Helps you keep track of server rate limits so you don't send API requests too frequently\n * The server needs to send X-RateLimit- header fields for this to be useful\n */\nexport default class RequestRateLimiter {\n\n\tconstructor() {\n\t\tthis.requestLimit = 10;\n\t\tthis.remaining = this.requestLimit;\n\t\tthis.timeBetweenResets = 1;\n\t\tthis.nextReset = performance.now() + this.timeBetweenResets;\n\t\tthis.lastResponseServerTime = -Infinity;\n\t}\n\n\t/**\n\t * Feed your responses to this function to help stay under the limit\n\t * It inspects X-RateLimit- header fields\n\t * @param {Response} response\n\t * @returns {void}\n\t */\n\tresponseReceived(response) {\n\t\tconst { error, nextResetIn, requestLimit, remaining, serverTime, gotLimit } = RequestRateLimiter.interpretResponse(\n\t\t\tresponse,\n\t\t\tthis.lastResponseServerTime\n\t\t);\n\t\t\n\t\tif(error) {\n\t\t\tconsole.warn(\"Missing/bad header fields in response %o\", response);\n\t\t} else {\n\t\t\tthis.lastResponseServerTime = serverTime;\n\t\t\tthis.nextReset = performance.now() / 1000 + nextResetIn;\n\t\t\tif(!Number.isNaN(remaining)) {\n\t\t\t\tthis.remaining = remaining;\n\t\t\t}\n\t\t\tif(gotLimit) {\n\t\t\t\tthis.requestLimit = requestLimit;\n\t\t\t\tif(remaining >= requestLimit - 1) {\n\t\t\t\t\tthis.timeBetweenResets = nextResetIn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} [desired] The number of requests you -wish- send\n\t * @returns {number} The number of requests you actually -can- send\n\t */\n\tlimit(desired = 1) {\n\t\tif(this.remaining < this.requestLimit) {\n\t\t\tconst now = performance.now() / 1000;\n\t\t\tif(now >= this.nextReset) {\n\t\t\t\tthis.nextReset = now + this.timeBetweenResets;\n\t\t\t\tthis.remaining = this.requestLimit;\n\t\t\t}\n\t\t}\n\t\tlet result = Math.min(Math.max(0, Math.trunc(desired)), this.remaining);\n\t\tthis.remaining -= result;\n\t\treturn result;\n\t}\n\n\t/**\n\t * @return {number}\n\t */\n\ttimeToWait() {\n\t\treturn this.remaining > 0 ? 0 : Math.max(0, this.nextReset - performance.now() / 1000);\n\t}\n\n\t/**\n\t * \n\t * @param {?AbortSignal} signal \n\t */\n\tasync waitToSendOne(signal) {\n\t\twhile(this.limit(1) === 0) {\n\t\t\tawait wait(this.timeToWait(), signal);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @static\n\t * @param {Response} response\n\t * @param {number} lastResponseServerTime\n\t * @returns {{ error : boolean, nextResetIn : number, requestLimit : number, remaining : number, serverTime : number, gotLimit : boolean }}\n\t */\n\tstatic interpretResponse(response, lastResponseServerTime) {\n\t\tconst headers = response.headers;\n\t\t\n\t\tlet error = true;\n\t\tlet nextResetIn = NaN;\n\t\tlet requestLimit = NaN;\n\t\tlet remaining = NaN;\n\t\tlet serverTime = NaN;\n\t\tlet gotLimit = false;\n\n\t\tlet responseTime = httpDateToTimestamp(headers.get(\"Date\"));\n\t\tif(responseTime >= lastResponseServerTime || Number.isNaN(responseTime)) {\n\t\t\tserverTime = Number.isNaN(responseTime) ? (Date.UTC() / 1000) : responseTime;\n\t\t\tif(response.status === 429 || response.status === 503) { // We already sent too many somehow\n\t\t\t\tconst retryAfterFV = headers.get(\"Retry-After\");\n\t\t\t\tnextResetIn = /^(0|[1-9]\\d*)$/.test(retryAfterFV) ? +retryAfterFV : (httpDateToTimestamp(retryAfterFV) - serverTime);\n\t\t\t\tif(nextResetIn <= 0) {\n\t\t\t\t\tnextResetIn = 0;\n\t\t\t\t}\n\t\t\t\tremaining = 0;\n\t\t\t\terror = false;\n\t\t\t} else {\n\t\t\t\tconst rLimit = parseInt(headers.get(\"X-RateLimit-Limit\"));\n\n\t\t\t\tif(Number.isSafeInteger(rLimit) && rLimit >= 1) {\n\t\t\t\t\tlet rem = Math.min(Number.MAX_SAFE_INTEGER, Math.max(0, parseInt(headers.get(\"X-RateLimit-Remaining\"))));\n\t\t\t\t\tlet resetTime = parseInt(headers.get(\"X-RateLimit-Reset\"));\n\t\t\t\t\t\n\t\t\t\t\tif(Number.isSafeInteger(rem) && !Number.isNaN(resetTime)) {\n\t\t\t\t\t\tif(resetTime + 24*60*60 > serverTime) { // Some servers use timestamps instead of relative time\n\t\t\t\t\t\t\tresetTime -= serverTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremaining = rem;\n\t\t\t\t\t\trequestLimit = rLimit;\n\t\t\t\t\t\tnextResetIn = Math.max(0, resetTime);\n\t\t\t\t\t\tgotLimit = true;\n\t\t\t\t\t\terror = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tserverTime = lastResponseServerTime; \n\t\t\terror = false;\n\t\t} \n\n\t\treturn { error, nextResetIn, requestLimit, remaining, serverTime, gotLimit };\n\t}\n}\n","import RequestRateLimiter from \"./request-rate-limiter.js\";\nimport { wait, combineAbortSignals, AsyncMutex } from \"./async-utils.js\";\n\n\n\nexport class TmdbClient {\n\t/**\n\t * @param {!string} apiKey \n\t * @param {?AbortSignal} [signalForAllWork] Signal for stopping all work\n\t * @param {!string} [language] The preffered text language\n\t */\n\tconstructor(\n\t\tapiKey,\n\t\tsignalForAllWork = null,\n\t\tlanguage = \"en\"\n\t) {\n\t\tthis.limiter = new RequestRateLimiter();\n\n\t\tthis.apiKey = apiKey;\n\t\tthis.timeout = null;\n\n\t\tthis.configuration = null;\n\t\tthis.configurationMutex = new AsyncMutex();\n\n\t\tthis.language = language;\n\n\t\tthis.signalForAllWork = signalForAllWork;\n\n\t}\n\n\t\n\t/**\n\t * @param {!number} movieId\n\t * @param {!Object.<!string, !number>} imageSizes\n\t * @param {?AbortSignal} [options.signal]\n\t */\n\tasync getMovieDetails(movieId, imageSizes = {}, signal = null) {\n\t\tconst reply = await this.queryServer(\"movie/\" + movieId, {\n\t\t\tlanguage: this.language,\n\t\t\tappend_to_response: \"videos\"\n\t\t}, signal);\n\n\t\tif(\n\t\t\t!(reply.genres instanceof Array) ||\n\t\t\t!(reply.videos instanceof Object) ||\n\t\t\t!(reply.videos.results instanceof Array)\n\t\t) {\n\t\t\tthrow new Error(\"Bad reply\");\n\t\t}\n\t\tconst youtubeTrailerObject = reply.videos.results.find(v =>\n\t\t\tv instanceof Object &&\n\t\t\tv.site === \"YouTube\" &&\n\t\t\tv.type === \"Trailer\" &&\n\t\t\ttypeof v.key === \"string\"\n\t\t) || null;\n\n\t\tconst imageBaseUrls = await this.getImageBasePaths(imageSizes, signal);\n\n\t\treturn {\n\t\t\tid: movieId,\n\t\t\ttitle: String(reply.title),\n\t\t\ttagline: reply.tagline === null ? null : String(reply.tagline),\n\t\t\toverview: reply.overview === null ? null : String(reply.overview),\n\t\t\tgenres: reply.genres.map(g => String(g.name)).sort((a, b) => a.localeCompare(b, this.language)),\n\t\t\truntime: reply.runtime === null ? null : reply.runtime,\n\t\t\tyoutubeTrailer: youtubeTrailerObject === null ? null : youtubeTrailerObject.key,\n\t\t\tposter: (\n\t\t\t\treply.poster_path === null ?\n\t\t\t\tnull :\n\t\t\t\timageBaseUrls.posters + String(reply.poster_path)\n\t\t\t),\n\t\t\tbackdrop: (\n\t\t\t\treply.backdrop_path === null ?\n\t\t\t\tnull :\n\t\t\t\timageBaseUrls.backdrops + String(reply.backdrop_path)\n\t\t\t),\n\t\t};\n\t\t\n\t}\n\n\n\n\t/**\n\t * @param {!string} searchString\n\t * @param {!object} [options]\n\t * @param {?AbortSignal} [options.signal]\n\t * @param {!number} [options.firstPage]\n\t * @param {!number} [options.posterWidth]\n\t */\n\tasync * searchMovies(searchString, options = {}) {\n\t\tif(searchString !== \"\") {\n\t\t\tconst {\n\t\t\t\tsignal = null,\n\t\t\t\tfirstPage = 0,\n\t\t\t\tposterWidth = Infinity\n\t\t\t} = options;\n\n\t\t\tconst posterBasePath = (\n\t\t\t\tawait this.getImageBasePaths({ posters: posterWidth }, signal)\n\t\t\t).posters;\n\n\t\t\t// The server has a bad habit of returning duplicate results\n\t\t\t// so we need to filter out results we've already processed\n\t\t\tconst movieIds = new Set();\n\n\t\t\tlet results = [];\n\t\t\tlet page = firstPage;\n\t\t\tlet morePages = true;\n\t\t\tdo {\n\t\t\t\tresults = [];\n\t\t\t\tconst reply = await this.sendSearchMoviesRequest(searchString, page, signal);\n\t\t\t\t\n\t\t\t\t++page;\n\t\t\t\tmorePages = +reply.total_pages > page;\n\t\t\t\t\n\t\t\t\tif(!(reply.results instanceof Array)) {\n\t\t\t\t\tthrow new Error(\"Bad reply\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(reply.results instanceof Array) {\n\t\t\t\t\tresults = reply.results.map(r => this.buildSearchResultObject(r, posterBasePath)).filter(({ id }) => {\n\t\t\t\t\t\tconst duplicate = movieIds.has(id);\n\t\t\t\t\t\tmovieIds.add(id);\n\t\t\t\t\t\treturn !duplicate;\n\t\t\t\t\t});\n\t\t\t\t\tif(results.length && morePages) {\n\t\t\t\t\t\tyield results;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while(morePages);\n\t\t\t\n\t\t\tif(results.length) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\t/**\n\t * @private\n\t */\n\tasync sendSearchMoviesRequest(searchString, page, signal) {\n\t\treturn this.queryServer(\"search/movie\", {\n\t\t\tquery: searchString,\n\t\t\tpage: page + 1, // The server uses 1-based indexing\n\t\t\tlanguage: this.language\n\t\t}, signal);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tbuildSearchResultObject(input, posterBasePath) {\n\t\treturn {\n\t\t\tid: Number(input.id) || 0,\n\t\t\ttitle: String(input.title),\n\t\t\tposter: typeof input.poster_path !== \"string\" ? null : posterBasePath + String(input.poster_path),\n\t\t\toverview: input.overview === null ? null : String(input.overview)\n\t\t};\n\t}\n\t\n\t/**\n\t * @private\n\t * @param {?AbortSignal} [options.signal]\n\t */\n\tasync getConfiguration(signal = null) {\n\t\treturn this.configurationMutex.runExclusively(async () => {\n\t\t\tif(!this.configuration) {\n\t\t\t\tconst { images } = await this.queryServer(\"configuration\", {}, this.signalForAllWork);\n\t\t\t\tif(\n\t\t\t\t\ttypeof images !== \"object\" ||\n\t\t\t\t\t!isStringArray(images.poster_sizes) ||\n\t\t\t\t\t!isStringArray(images.backdrop_sizes) ||\n\t\t\t\t\t!isStringArray(images.profile_sizes)\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\"Bad reply\");\n\t\t\t\t}\n\n\t\t\t\tthis.configuration = {\n\t\t\t\t\timagesBaseUrl: String(images.secure_base_url),\n\t\t\t\t\timageSizes: {\n\t\t\t\t\t\tposters: images.poster_sizes,\n\t\t\t\t\t\tbackdrops: images.backdrop_sizes,\n\t\t\t\t\t\tprofiles: images.profile_sizes,\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.configuration;\n\t\t}, false, this.signalForAllWork, signal);\n\t}\n\n\n\n\t/**\n\t * @private\n\t * @param {!string|URL} address\n\t * @param {!string|URLSearchParams} [params]\n\t * @param {?AbortSignal} [signal]\n\t */\n\tasync queryServer(address, params = {}, signal = null) {\n\t\treturn combineAbortSignals(async combinedSignal => {\n\t\t\tconst url = buildUrl(address, params, \"https://api.themoviedb.org/3/\", {\n\t\t\t\t\"api_key\": this.apiKey\n\t\t\t});\n\t\t\n\t\t\tawait this.limiter.waitToSendOne(combinedSignal);\n\t\t\tconst response = await fetch(new Request(url.href), { signal: combinedSignal });\n\n\t\t\tthis.limiter.responseReceived(response);\n\n\t\t\tlet result;\n\t\t\tif(!response.ok || !(\n\t\t\t\t\t(result = await response.json()) instanceof Object\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tconsole.warn(\"TmdbClient - bad response: %o\", response);\n\t\t\t\tthrow new Error(\"Bad response\");\n\t\t\t}\n\t\t\treturn result;\n\t\t}, signal, this.signalForAllWork);\n\t}\n\n\t/**\n\t * @private\n\t * @param {!Object.<!string, !number>} desiredSizes\n\t * @param {?AbortSignal} [options.signal]\n\t */\n\tasync getImageBasePaths(desiredSizes, signal = null) {\n\n\t\tconst {\n\t\t\timagesBaseUrl,\n\t\t\timageSizes,\n\t\t} = await this.getConfiguration(signal);\n\n\t\tconst result = {};\n\t\tfor(let type of [\"posters\", \"backdrops\", \"profiles\"]) {\n\t\t\tlet bestSize = \"original\";\n\t\t\tif(type in desiredSizes) {\n\t\t\t\tlet bestSizeAsInt = Infinity;\n\t\t\t\tfor(let size of imageSizes[type]) {\n\t\t\t\t\tif(/^w\\d+$/.test(size)) {\n\t\t\t\t\t\tconst asInt = parseInt(size.substr(1));\n\t\t\t\t\t\tif(asInt >= desiredSizes[type] && asInt < bestSizeAsInt) {\n\t\t\t\t\t\t\tbestSize = size;\n\t\t\t\t\t\t\tbestSizeAsInt = asInt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[type] = imagesBaseUrl + bestSize;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class MovieSearcher {\n\t/**\n\t * @param {!TmdbClient} tmdb\n\t * @param {!function(Array.<object>, boolean, boolean, *) : void} onResultsReceived Arguments: results, firstResults, lastResults, error\n\t * @param {!function(object) : boolean} [filter]\n\t * @param {!number} [posterWidth]\n\t */\n\tconstructor(tmdb, onResultsReceived, filter = m => true, posterWidth = Infinity) {\n\t\tthis.tmdb = tmdb;\n\t\tthis.abortController = new AbortController();\n\t\tthis.filter = filter;\n\t\tthis.onResultsReceived = onResultsReceived;\n\t\tthis.posterWidth = posterWidth;\n\t\tthis.loading = false;\n\t\tthis.generator = null;\n\t\tthis.firstResults = true;\n\t}\n\n\t/**\n\t * @param {!string} searchString\n\t * @param {!number} [delayBeforeSending]\n\t * @returns {void}\n\t */\n\tnewSearch(searchString, delayBeforeSending = 0) {\n\t\tthis.stop();\n\t\tthis.firstResults = true;\n\t\tthis.generator = this.tmdb.searchMovies(searchString, {\n\t\t\tfirstPage: 0,\n\t\t\tposterWidth: this.posterWidth,\n\t\t\tsignal: this.abortController.signal\n\t\t});\n\t\twait(delayBeforeSending, this.abortController.signal).then(() => {\n\t\t\tthis.loadMore();\n\t\t}).catch(() => {});\n\t}\n\n\t/**\n\t * @returns {!boolean}\n\t */\n\treachedEnd() {\n\t\treturn this.generator === null;\n\t}\n\t/**\n\t * @returns {void}\n\t */\n\tloadMore() {\n\t\tif(!this.loading && !this.reachedEnd()) {\n\t\t\tconst resultsPromise = this.generator.next();\n\t\t\tconst generator = this.generator;\n\t\t\tresultsPromise.then(({value, done}) => {\n\t\t\t\tif(this.generator === generator) {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tif(done) {\n\t\t\t\t\t\tthis.generator = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(value || done) {\n\t\t\t\t\t\tconst results = value ? value.filter(this.filter) : [];\n\t\t\t\t\t\tif(results.length || done) {\n\t\t\t\t\t\t\tconst firstResults = this.firstResults;\n\t\t\t\t\t\t\tthis.firstResults = false;\n\t\t\t\t\t\t\tthis.onResultsReceived(results, firstResults, done, null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.load();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tresultsPromise.catch(err => {\n\t\t\t\tif(this.generator === generator &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!(err instanceof DOMException) ||\n\t\t\t\t\t\terr.name !== \"AbortError\"\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.onResultsReceived([], this.firstResults, false, err);\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tconsole.error(\"Search failed: %o\", err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t/**\n\t * @return {void}\n\t */\n\tstop() {\n\t\tthis.loading = false;\n\t\tthis.generator = null;\n\t\tthis.abortController.abort();\n\t\tthis.abortController = new AbortController();\n\t}\n}\n\n\n\n/**\n * @param {*} arr\n * @returns {!boolean}\n */\nfunction isStringArray(arr) {\n\treturn arr instanceof Array && arr.every(v => typeof v === \"string\");\n}\n\n\n/**\n* @param {!string|URL} address\n* @param {!string|URLSearchParams} [params]\n* @param {!string|URL} [baseAddress]\n* @param {!string|URLSearchParams} [extraParams]\n* @returns {!URL}\n* @throws {TypeError}\n*/\nfunction buildUrl(address, params = {}, baseAddress = \"\", extraParams = {}) {\n\tconst result = new URL(address, baseAddress);\n\tfor(let [key, value] of new URLSearchParams(params)) {\n\t\tresult.searchParams.set(key, value);\n\t}\n\tfor(let [key, value] of new URLSearchParams(extraParams)) {\n\t\tresult.searchParams.set(key, value);\n\t}\n\treturn result;\n}\n\n\n\n\n\n\n","import React from \"react\";\nimport styles from \"./SearchView.module.css\";\nimport TextTruncate from \"react-text-truncate\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link } from \"react-router-dom\";\nimport { MovieSearcher } from \"./tmdb.js\";\n\nexport default class SearchView extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\n\t\tthis.state = {\n\t\t\tsearchString: props.searchString || \"\",\n\t\t\tsearchResults: [],\n\t\t\tmoreSearchResultsAvailable: false,\n\t\t};\n\n\t\tthis.searcher = new MovieSearcher(\n\t\t\tprops.tmdbClient,\n\t\t\tthis.receivedSearchResults.bind(this),\n\t\t\tmovie => !!movie.poster, // Filter out movies without posters\n\t\t\t320 * devicePixelRatio // Poster width\n\t\t);\n\t\t\n\t\tthis.loadMoreResults = this.loadMoreResults.bind(this);\n\t\tthis.searchInputOnChange = this.searchInputOnChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.searcher.newSearch(this.state.searchString);\n\t}\n\tsearchInputOnChange(event) {\n\t\tconst searchString = event.target.value;\n\t\tthis.setState({ searchString });\n\t\tthis.searcher.newSearch(searchString, 0.35);\n\t\tthis.props.searchStringChanged(searchString);\n\t}\n\tloadMoreResults() {\n\t\tthis.searcher.loadMore();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.searcher.stop();\n\t}\n\treceivedSearchResults(results, firstResults, lastResults, error) {\n\t\tthis.setState((oldState) => {\n\t\t\treturn {\n\t\t\t\tsearchResults: firstResults ? results : [...oldState.searchResults, ...results],\n\t\t\t\tmoreSearchResultsAvailable: !lastResults && !error\n\t\t\t};\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tclassName={styles.searchInput}\n\t\t\t\t\tvalue={this.state.searchString}\n\t\t\t\t\tonChange={this.searchInputOnChange}\n\t\t\t\t\tmaxLength=\"140\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\tplaceholder=\"Type the name of a movie...\"\n\t\t\t\t/>\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tdataLength={this.state.searchResults.length}\n\t\t\t\t\tnext={this.loadMoreResults}\n\t\t\t\t\thasMore={this.state.moreSearchResultsAvailable}\n\t\t\t\t\tscrollThreshold=\"600px\"\n\t\t\t\t\tloader={<p className={styles.loadingText}>One second...</p>}\n\t\t\t\t\t>\n\t\t\t\t\t<ul className={styles.filmList}>\n\t\t\t\t\t\t{this.state.searchResults.map(({ id, title, poster, overview }, index) => (\n\t\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t\t<Link to={process.env.PUBLIC_URL + \"/movie/\" + id}>\n\t\t\t\t\t\t\t\t\t<h2 title={title}>{title}</h2>\n\t\t\t\t\t\t\t\t\t<img src={poster} className={styles.poster} alt={\"Poster for \" + title} />\n\t\t\t\t\t\t\t\t\t<TextTruncate\n\t\t\t\t\t\t\t\t\t\tline={4}\n\t\t\t\t\t\t\t\t\t\telement=\"p\"\n\t\t\t\t\t\t\t\t\t\ttext={overview}\n\t\t\t\t\t\t\t\t\t\ttitle={overview}\n\t\t\t\t\t\t\t\t\t\tmaxCalculateTimes={8}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</InfiniteScroll>\n\t\t\t</section>\n\t\t);\n\t}\n};\n","import React from \"react\";\n\nexport default function NotFoundView() {\n\treturn <section>Page Not Found</section>;\n};\n","import React from \"react\";\nimport styles from \"./ListView.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ListView(props) {\n\treturn (\n\t\t<section>\n\t\t\t<h2 className={styles.listTitle}>{props.listTitle}</h2>\n\t\t\t<ul className={styles.movieList}>\n\t\t\t\t{props.items.map(({ id, title, poster }) => \n\t\t\t\t\t<Link to={process.env.PUBLIC_URL + \"/movie/\" + id} key={id}>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t\t\t<img src={poster} alt=\"Poster\" />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</section>\n\t);\n};\n","import React from \"react\";\nimport searchIcon from \"./icons/search.svg\";\nimport favouriteIcon from \"./icons/favourite.svg\";\nimport watchlistIcon from \"./icons/watchlist.svg\";\nimport MovieView from \"./MovieView.js\"\nimport SearchView from \"./SearchView.js\"\nimport NotFoundView from \"./NotFoundView.js\"\nimport ListView from \"./ListView.js\"\nimport styles from \"./App.module.css\";\nimport { BrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tmatchPath,\n\tNavLink\n} from \"react-router-dom\";\nimport { TmdbClient } from \"./tmdb.js\";\n\n\nconst listsStorageKey = \"Movies.Lists\";\nconst tmdbApiKey = \"c4f2cf342c77c4f9252c1c663abb4937\";\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\n\t\tthis.tmdbClientAbortController = new AbortController();\n\t\tthis.tmdbClient = new TmdbClient(\n\t\t\ttmdbApiKey,\n\t\t\tthis.tmdbClientAbortController.signal,\n\t\t\t\"en\" // You could set this to navigator.language to load content in the user's language\n\t\t);\n\n\t\tthis.state = {\n\t\t\tlists: (\n\t\t\t\tJSON.parse(localStorage.getItem(listsStorageKey)) ||\n\t\t\t\t{ \"favourites\": [], \"watchlist\": [] }\n\t\t\t),\n\t\t\tmovieDetails: null,\n\t\t};\n\n\t\t\n\t\tthis.loadMovieDetails = this.loadMovieDetails.bind(this);\n\t\tthis.movieId = null;\n\n\t\tthis.views = [\n\t\t\t{\n\t\t\t\tlinkAddress: process.env.PUBLIC_URL + \"/\",\n\t\t\t\tlinkIcon: searchIcon,\n\t\t\t\tlinkText: \"Search\",\n\t\t\t\tpaths: [process.env.PUBLIC_URL + \"/\", process.env.PUBLIC_URL + \"/search/:searchString?\"],\n\t\t\t\trender: props => (\n\t\t\t\t\t<SearchView\n\t\t\t\t\t\ttmdbClient={this.tmdbClient}\n\t\t\t\t\t\tsearchString={props.match.params.searchString}\n\t\t\t\t\t\tsearchStringChanged={ss =>\n\t\t\t\t\t\t\t{ props.history.replace(process.env.PUBLIC_URL + \"/search/\" + encodeURIComponent(ss));\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t},\n\t\t\t{\n\t\t\t\tlinkAddress: null,\n\t\t\t\tlinkIcon: null,\n\t\t\t\tlinkText: null,\n\t\t\t\tpaths: [process.env.PUBLIC_URL + \"/movie/:movieId\"],\n\t\t\t\trender: props => {\n\t\t\t\t\treturn <MovieView\n\t\t\t\t\t\tmovieDetails={this.state.movieDetails}\n\t\t\t\t\t\tmovieId={Number(props.match.params.movieId)}\n\t\t\t\t\t\tloadMovieDetails={this.loadMovieDetails}\n\t\t\t\t\t\tinFavourites={\n\t\t\t\t\t\t\t!!this.state.movieDetails &&\n\t\t\t\t\t\t\t!!this.state.lists.favourites.find(({id}) => id === this.state.movieDetails.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinWatchlist={\n\t\t\t\t\t\t\t!!this.state.movieDetails &&\n\t\t\t\t\t\t\t!!this.state.lists.watchlist.find(({id}) => id === this.state.movieDetails.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddToList={listName => {\n\t\t\t\t\t\t\tthis.state.movieDetails &&\n\t\t\t\t\t\t\tthis.addMovieToList(listName, this.state.movieDetails);\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tremoveFromList={listName => {\n\t\t\t\t\t\t\tthis.state.movieDetails &&\n\t\t\t\t\t\t\tthis.removeMovieFromList(listName, this.state.movieDetails.id);\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlinkAddress: process.env.PUBLIC_URL + \"/watchlist\",\n\t\t\t\tlinkIcon: watchlistIcon,\n\t\t\t\tlinkText: \"Watchlist\",\n\t\t\t\tpaths: [process.env.PUBLIC_URL + \"/watchlist\"],\n\t\t\t\trender: props => <ListView listTitle=\"Watchlist\" items={this.state.lists.watchlist} />\n\t\t\t},\n\t\t\t{\n\t\t\t\tlinkAddress: process.env.PUBLIC_URL + \"/favourites\",\n\t\t\t\tlinkIcon: favouriteIcon,\n\t\t\t\tlinkText: \"Favourites\",\n\t\t\t\tpaths: [process.env.PUBLIC_URL + \"/favourites\"],\n\t\t\t\trender: props => <ListView listTitle=\"Favourites\" items={this.state.lists.favourites} />\n\t\t\t},\n\t\t\t{\n\t\t\t\tlinkAddress: null,\n\t\t\t\tlinkIcon: null,\n\t\t\t\tlinkText: null,\n\t\t\t\tpaths: null,\n\t\t\t\trender: NotFoundView\n\t\t\t},\n\t\t];\n\n\t\tthis.onStorage = this.onStorage.bind(this);\n\t\twindow.addEventListener(\"storage\", this.onStorage);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.tmdbClientAbortController.abort();\n\t\twindow.removeEventListener(\"storage\", this.onStorage);\n\t}\n\n\tonStorage({ key, storageArea, newValue }) {\n\t\tif(storageArea === localStorage && key === listsStorageKey) {\n\t\t\tthis.setState({ lists: JSON.parse(newValue) });\n\t\t}\n\t}\n\n\n\tloadMovieDetails(movieId) {\n\t\tthis.setState({ movieDetails: null });\n\t\tthis.movieId = movieId;\n\t\tthis.loadMovieDetailsAbortController = new AbortController();\n\t\tconst signal = this.loadMovieDetailsAbortController.signal;\n\n\t\tthis.tmdbClient.getMovieDetails(movieId, {\n\t\t\tposters: 400 * devicePixelRatio,\n\t\t\tbackdrops: 1920 * devicePixelRatio\n\t\t}, signal).then(movieDetails => {\n\t\t\tif(this.movieId === movieId) {\n\t\t\t\tthis.setState({ movieDetails });\n\t\t\t}\n\t\t});\n\t}\n\n\tmodifyList(listName, callback) {\n\t\tthis.setState(({ lists }) => {\n\t\t\tconst { ...newListsObject } = lists;\n\t\t\tnewListsObject[listName] = [...newListsObject[listName]];\n\t\t\tcallback(newListsObject[listName]);\n\t\t\tlocalStorage.setItem(listsStorageKey, JSON.stringify(newListsObject));\n\t\t\treturn { lists: newListsObject };\n\t\t});\n\t}\n\n\taddMovieToList(listName, { id, title, poster }) {\n\t\tthis.modifyList(listName, list => {\n\t\t\tif(!list.find(m => m.id === id)) {\n\n\t\t\t\t// Insert it at the correct position to maintain alphabetical ordering\n\t\t\t\tlet index = list.findIndex(\n\t\t\t\t\tm => title.localeCompare(m.title) === -1\n\t\t\t\t);\n\t\t\t\tif(index === -1) {\n\t\t\t\t\tindex = list.length;\n\t\t\t\t}\n\t\t\t\tlist.splice(index, 0, { id, title, poster });\n\t\t\t}\n\t\t});\n\t}\n\tremoveMovieFromList(listName, movieId) {\n\t\tthis.modifyList(listName, list => {\n\t\t\tconst index = list.findIndex(({ id }) => id === movieId);\n\t\t\tif(index !== -1) {\n\t\t\t\tlist.splice(index, 1);\n\t\t\t}\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className={styles.app}>\n\t\t\t\t\t<Header views={this.views}></Header>\n\t\t\t\t\t<main className={styles.main}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t{this.views.map(({paths, render}, index) =>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tpath={paths}\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\trender={render}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\n\nfunction Header(props) {\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<img\n\t\t\t\tsrc={process.env.PUBLIC_URL + \"/favicon.svg\"}\n\t\t\t\tclassName={styles.logo}\n\t\t\t\talt=\"Logo\"\n\t\t\t/>\n\t\t\t<h1>Movies</h1>\n\t\t\t<HeaderMenu views={props.views}></HeaderMenu>\n\t\t</header>\n\t);\n}\n\nfunction HeaderMenu(props) {\n\treturn (\n\t\t<nav className={styles.headerMenu}>\n\t\t\t{props.views.map(({linkAddress, linkIcon, linkText, paths}, index) =>\n\t\t\t\tlinkAddress !== null && <p key={index}>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={linkAddress}\n\t\t\t\t\t\tisActive={(match, {pathname}) =>\n\t\t\t\t\t\t\t!!matchPath(pathname, { path: paths, exact: true, strict: false })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tactiveClassName={styles.activeLink}\n\t\t\t\t\t\texact\n\t\t\t\t\t>\n\t\t\t\t\t\t<img src={linkIcon} alt={linkText} />\n\t\t\t\t\t</NavLink>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</nav>\n\t);\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}